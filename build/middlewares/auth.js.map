{"version":3,"sources":["../../src/middlewares/auth.js"],"names":["auth","req","res","next","authorization","headers","token","console","log","status","json","data","error","message","split","decode","jwt","verify","process","env","jwt_secret","userSchema","findById","id","password","userData","errors","user"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,IAAI;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,YAAAA,aAFG,GAEaH,GAAG,CAACI,OAAJ,CAAYC,KAFzB;AAGTC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;;AAHS,gBAIJA,aAJI;AAAA;AAAA;AAAA;;AAAA,6CAKAF,GAAG,CACPO,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,cAAAA,IAAI,EAAE,EAAR;AAAYC,cAAAA,KAAK,EAAE,EAAnB;AAAuBC,cAAAA,OAAO,EAAE;AAAhC,aAFD,CALA;;AAAA;AAUHP,YAAAA,KAVG,GAUKF,aAAa,CAACU,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAVL;AAWHC,YAAAA,MAXG,GAWMC,yBAAIC,MAAJ,CAAWX,KAAX,EAAkBY,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAXN;AAAA;AAAA,mBAYcC,uBAAWC,QAAX,CAAoBP,MAAM,CAACQ,EAA3B,EAA+B;AACpDC,cAAAA,QAAQ,EAAE;AAD0C,aAA/B,CAZd;;AAAA;AAYHC,YAAAA,QAZG;;AAAA,gBAeJA,QAfI;AAAA;AAAA;AAAA;;AAAA,6CAgBAvB,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,cAAAA,IAAI,EAAE,EADoB;AAE1Be,cAAAA,MAAM,EAAE,EAFkB;AAG1Bb,cAAAA,OAAO,EAAE;AAHiB,aAArB,CAhBA;;AAAA;AAsBTZ,YAAAA,GAAG,CAAC0B,IAAJ,GAAWF,QAAX;AACAtB,YAAAA,IAAI;AAvBK;AAAA;;AAAA;AAAA;AAAA;AAyBTI,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMK,OAAlB;;AAzBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJb,IAAI;AAAA;AAAA;AAAA,GAAV;;eA6BeA,I","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport userSchema from \"../models/schemas/userSchema\";\r\n\r\nconst auth = async (req, res, next) => {\r\n  try {\r\n    const authorization = req.headers.token;\r\n    console.log(authorization);\r\n    if (!authorization) {\r\n      return res\r\n        .status(401)\r\n        .json({ data: {}, error: [], message: \"Please login!!\" });\r\n    }\r\n\r\n    const token = authorization.split(\" \")[1];\r\n    const decode = jwt.verify(token, process.env.jwt_secret);\r\n    const userData = await userSchema.findById(decode.id, {\r\n      password: 0,\r\n    });\r\n    if (!userData) {\r\n      return res.status(400).json({\r\n        data: {},\r\n        errors: [],\r\n        message: \"Not a valid user!\",\r\n      });\r\n    }\r\n    req.user = userData;\r\n    next();\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport default auth;\r\n"],"file":"auth.js"}