{"version":3,"sources":["../../../src/controller/user/cityControler.js"],"names":["getCity","req","res","citySchems","find","cityDetails","status","json","data","errors","value","msg","param","location","message","console","log","getHotels","hotelSchems","hotelDetails"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,OAAO;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEOC,uBAAWC,IAAX,EAFP;;AAAA;AAEbC,YAAAA,WAFa;;AAAA,gBAGdA,WAHc;AAAA;AAAA;AAAA;;AAAA,6CAIVH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,cAAAA,IAAI,EAAE,EADoB;AAE1BC,cAAAA,MAAM,EAAE,CACN;AACEC,gBAAAA,KAAK,EAAE,EADT;AAEEC,gBAAAA,GAAG,EAAE,oBAFP;AAGEC,gBAAAA,KAAK,EAAE,MAHT;AAIEC,gBAAAA,QAAQ,EAAE;AAJZ,eADM,CAFkB;AAU1BC,cAAAA,OAAO,EAAE;AAViB,aAArB,CAJU;;AAAA;AAiBnBZ,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,IAAI,EAAEH,WADa;AAEnBI,cAAAA,MAAM,EAAE,EAFW;AAGnBK,cAAAA,OAAO,EAAE;AAHU,aAArB;AAjBmB;AAAA;;AAAA;AAAA;AAAA;AAuBnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAMF,OAAlB;;AAvBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPd,OAAO;AAAA;AAAA;AAAA,GAAb;;;;AA2BA,IAAMiB,SAAS;AAAA,4FAAG,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMgB,wBAAYd,IAAZ,EAFN;;AAAA;AAEfe,YAAAA,YAFe;;AAAA,gBAGhBA,YAHgB;AAAA;AAAA;AAAA;;AAAA,8CAIZjB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,cAAAA,IAAI,EAAE,EADoB;AAE1BC,cAAAA,MAAM,EAAE,CACN;AACEC,gBAAAA,KAAK,EAAE,EADT;AAEEC,gBAAAA,GAAG,EAAE,qBAFP;AAGEC,gBAAAA,KAAK,EAAE,OAHT;AAIEC,gBAAAA,QAAQ,EAAE;AAJZ,eADM,CAFkB;AAU1BC,cAAAA,OAAO,EAAE;AAViB,aAArB,CAJY;;AAAA;AAiBrBZ,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,IAAI,EAAEW,YADa;AAEnBV,cAAAA,MAAM,EAAE,EAFW;AAGnBK,cAAAA,OAAO,EAAE;AAHU,aAArB;AAjBqB;AAAA;;AAAA;AAAA;AAAA;AAuBrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAMF,OAAlB;;AAvBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATG,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import citySchems from \"../../models/schemas/citySchema\";\r\nimport hotelSchems from \"../../models/schemas/hotelSchema\";\r\n\r\nexport const getCity = async (req, res) => {\r\n  try {\r\n    const cityDetails = await citySchems.find();\r\n    if (!cityDetails) {\r\n      return res.status(400).json({\r\n        data: {},\r\n        errors: [\r\n          {\r\n            value: \"\",\r\n            msg: \"City not available\",\r\n            param: \"city\",\r\n            location: \"body\",\r\n          },\r\n        ],\r\n        message: \"City not available\",\r\n      });\r\n    }\r\n    res.status(200).json({\r\n      data: cityDetails,\r\n      errors: [],\r\n      message: \"City data fatched successfully\",\r\n    });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getHotels = async (req, res) => {\r\n  try {\r\n    const hotelDetails = await hotelSchems.find();\r\n    if (!hotelDetails) {\r\n      return res.status(400).json({\r\n        data: {},\r\n        errors: [\r\n          {\r\n            value: \"\",\r\n            msg: \"Hotel not available\",\r\n            param: \"Hotel\",\r\n            location: \"body\",\r\n          },\r\n        ],\r\n        message: \"Hotel not available\",\r\n      });\r\n    }\r\n    res.status(200).json({\r\n      data: hotelDetails,\r\n      errors: [],\r\n      message: \"Hotel data fatched successfully\",\r\n    });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n"],"file":"cityControler.js"}